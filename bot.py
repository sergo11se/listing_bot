import time
import requests
import logging
from bs4 import BeautifulSoup
from flask import Flask
from threading import Thread

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = '7683066723:AAHot2507_9RrkpNCMh5QKLi0cQr7cPEVH8'
CHAT_ID = '5305138065'

# Flask ‚Äî –¥–ª—è Render
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is running!"

# Telegram –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_telegram_message(message):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {'chat_id': CHAT_ID, 'text': message}
    try:
        requests.post(url, data=payload)
    except Exception as e:
        logging.warning(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: {e}')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Binance
def check_binance():
    sent = load_sent_binance()
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        url = 'https://www.binance.com/bapi/composite/v1/public/cms/article/list/query?type=1&pageNo=1&pageSize=10'
        response = requests.get(url, headers=headers)
        text = response.text
        logging.info(f"Binance raw response: {text[:500]}")  # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤

        data = response.json()  # –ï—Å–ª–∏ –∑–¥–µ—Å—å –æ—à–∏–±–∫–∞, –∑–Ω–∞—á–∏—Ç –æ—Ç–≤–µ—Ç –Ω–µ JSON

        new_sent = set(sent)

        for article in data.get('data', {}).get('articles', []):
            title = article.get('title', '')
            if 'will list' in title.lower() and title not in sent:
                send_telegram_message(f'üì¢ Binance Listing: {title}')
                new_sent.add(title)

        save_sent_binance(new_sent)
    except Exception as e:
        logging.warning(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ Binance: {e}')


# –ü—Ä–æ–≤–µ—Ä–∫–∞ Upbit (—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è, –¥–æ–±–∞–≤—å —Å–≤–æ—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
def check_upbit():
    pass

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Coinbase (—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è)
def check_coinbase():
    pass

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
def run_bot():
    last_notify = 0
    while True:
        logging.info("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Binance...")
        check_binance()
        logging.info("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Upbit...")
        check_upbit()
        logging.info("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Coinbase...")
        check_coinbase()

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ –∫–∞–∂–¥—ã–π —á–∞—Å
        if time.time() - last_notify >= 3600:
            send_telegram_message("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ.")
            last_notify = time.time()

        time.sleep(300)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# –ó–∞–ø—É—Å–∫ Flask + –±–æ—Ç–∞
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    Thread(target=run_bot).start()
    app.run(host='0.0.0.0', port=10000)


